version: '3.8'

services:
  # Web 预览版服务
  weather-duck-web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: weather-duck-web-preview
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_APP_TITLE=天气鸭 Web 预览版
      - VITE_APP_VERSION=1.0.0
    volumes:
      # 日志卷
      - nginx-logs:/var/log/nginx
    networks:
      - weather-duck-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.weather-duck.rule=Host(`localhost`)"
      - "traefik.http.services.weather-duck.loadbalancer.server.port=80"

  # 开发环境服务（可选）
  weather-duck-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: weather-duck-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - VITE_HMR_PORT=3000
    volumes:
      # 源代码热重载
      - .:/app
      - /app/node_modules
      - /app/dist-web
    networks:
      - weather-duck-network
    profiles:
      - dev
    command: npm run dev:web

  # Nginx 反向代理（生产环境）
  nginx-proxy:
    image: nginx:alpine
    container_name: weather-duck-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - weather-duck-web
    networks:
      - weather-duck-network
    profiles:
      - production

  # 监控服务（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: weather-duck-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - weather-duck-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: weather-duck-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - weather-duck-network
    profiles:
      - monitoring

# 网络配置
networks:
  weather-duck-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷
volumes:
  nginx-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# 扩展配置
x-common-variables: &common-variables
  TZ: Asia/Shanghai
  LANG: zh_CN.UTF-8

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"